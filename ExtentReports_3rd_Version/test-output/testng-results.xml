<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="1" failed="1" total="3" passed="1">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="917" started-at="2018-08-16T06:14:54Z" finished-at="2018-08-16T06:14:55Z">
    <groups>
    </groups>
    <test name="Default test" duration-ms="917" started-at="2018-08-16T06:14:54Z" finished-at="2018-08-16T06:14:55Z">
      <class name="extentReports.ExtentReportsClassVersion3">
        <test-method status="PASS" signature="startReport()[pri:0, instance:extentReports.ExtentReportsClassVersion3@215be6bb]" name="startReport" is-config="true" duration-ms="376" started-at="2018-08-16T11:44:54Z" finished-at="2018-08-16T11:44:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startReport -->
        <test-method status="FAIL" signature="failTest()[pri:0, instance:extentReports.ExtentReportsClassVersion3@215be6bb]" name="failTest" duration-ms="9" started-at="2018-08-16T11:44:54Z" finished-at="2018-08-16T11:44:54Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertTrue(Assert.java:42)
	at org.testng.Assert.assertTrue(Assert.java:52)
	at extentReports.ExtentReportsClassVersion3.failTest(ExtentReportsClassVersion3.java:44)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- failTest -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:extentReports.ExtentReportsClassVersion3@215be6bb]" name="getResult" is-config="true" duration-ms="9" started-at="2018-08-16T11:44:54Z" finished-at="2018-08-16T11:44:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=failTest status=FAILURE method=ExtentReportsClassVersion3.failTest()[pri:0, instance:extentReports.ExtentReportsClassVersion3@215be6bb] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="passTest()[pri:0, instance:extentReports.ExtentReportsClassVersion3@215be6bb]" name="passTest" duration-ms="1" started-at="2018-08-16T11:44:54Z" finished-at="2018-08-16T11:44:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- passTest -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:extentReports.ExtentReportsClassVersion3@215be6bb]" name="getResult" is-config="true" duration-ms="0" started-at="2018-08-16T11:44:54Z" finished-at="2018-08-16T11:44:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=passTest status=SUCCESS method=ExtentReportsClassVersion3.passTest()[pri:0, instance:extentReports.ExtentReportsClassVersion3@215be6bb] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="SKIP" signature="skipTest()[pri:0, instance:extentReports.ExtentReportsClassVersion3@215be6bb]" name="skipTest" duration-ms="0" started-at="2018-08-16T11:44:54Z" finished-at="2018-08-16T11:44:54Z">
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[Skipping - This is not ready for testing ]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: Skipping - This is not ready for testing 
	at extentReports.ExtentReportsClassVersion3.skipTest(ExtentReportsClassVersion3.java:52)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- skipTest -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:extentReports.ExtentReportsClassVersion3@215be6bb]" name="getResult" is-config="true" duration-ms="1" started-at="2018-08-16T11:44:54Z" finished-at="2018-08-16T11:44:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=skipTest status=SKIP method=ExtentReportsClassVersion3.skipTest()[pri:0, instance:extentReports.ExtentReportsClassVersion3@215be6bb] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="endReport()[pri:0, instance:extentReports.ExtentReportsClassVersion3@215be6bb]" name="endReport" is-config="true" duration-ms="506" started-at="2018-08-16T11:44:54Z" finished-at="2018-08-16T11:44:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endReport -->
      </class> <!-- extentReports.ExtentReportsClassVersion3 -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
